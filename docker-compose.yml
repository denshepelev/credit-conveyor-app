
version: "3.9"
services:
  auth:
    container_name: conveyor_project_auth_container
    build: ./auth
    restart: unless-stopped
    command: npm start
    ports:
      - "3005:3005"
    networks:
      - conveyor-network
    depends_on: 
      - postgres
      - zoo1  
      - kafka1                

  gateway:
    container_name: conveyor_project_gateway_container
    build: ./gateway
    restart: unless-stopped
    command: npm start
    ports:
      - "3006:3006"
    networks:
      - conveyor-network
    depends_on: 
      - postgres
      - zoo1  
      - kafka1

  credit:
    container_name: conveyor_project_credit_container
    build: ./creditConveyor
    restart: unless-stopped
    command: npm start
    ports:
      - "3001:3001"
    networks:
      - conveyor-network
    depends_on: 
      - postgres
      - zoo1  
      - kafka1

  deal:
    container_name: conveyor_project_deal_container
    build: ./deal
    restart: unless-stopped
    command: npm start
    ports:
      - "3002:3002"
    networks:
      - conveyor-network
    depends_on: 
      - postgres
      - zoo1  
      - kafka1   

  application:
    container_name: conveyor_project_application_container
    build: ./application
    restart: unless-stopped
    command: npm start
    ports:
      - "3003:3003"
    networks:
      - conveyor-network
    depends_on: 
      - postgres
      - zoo1  
      - kafka1  

  dossier:
    container_name: conveyor_project_dossier_container
    build: ./dossier
    restart: unless-stopped
    command: npm start
    ports:
      - "3004:3004"
    networks:
      - conveyor-network
    depends_on: 
      - postgres
      - zoo1  
      - kafka1           

  postgres:
    container_name: conveyor_project_postgres_container
    image: postgres
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "root"
      PGDATA: "./var/lib/postgresql/data/pgdata"
    volumes:
      - ./postgres_data:/var/lib/postgresql
      - ./deal/src/db/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
    ports:
      - "5432:5432"
    networks:
      - conveyor-network      

  pgadmin:
    container_name: conveyor_project_pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "denisshepelev@mail.ru"
      PGADMIN_DEFAULT_PASSWORD: "root"
    volumes:
    - ./pgadmin:/var/lib/pgadmin
    ports:
    - "5050:80"
    networks:
      - conveyor-network    

  zoo1:
    image: zookeeper:3.4.9
    container_name: conveyor_project_zookeeper_container
    restart: unless-stopped
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./full-stack/zoo1/data:/data
      - ./full-stack/zoo1/datalog:/datalog
    networks:
      - conveyor-network     


  kafka1:
    image: confluentinc/cp-kafka:5.2.1
    container_name: conveyor_project_kafka_container
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./full-stack/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1
    networks:
      - conveyor-network       

networks:
  conveyor-network:
    driver: bridge
